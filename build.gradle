plugins {
    id 'java'
    id 'org.jetbrains.kotlin.jvm' version '1.4.10'
    id 'maven-publish'
    id 'jacoco'
    id 'de.undercouch.download' version '4.1.1'
}

group 'com.aquivalabs.force.ant'
version '0.13'

repositories {
    mavenCentral()
}

def kotlin_version = '1.4.10'
def ant_version = '1.9.7'
def ant_salesforce_version = '47.0'
def xmlunit_version = '2.3.0'

dependencies {
    implementation files("libs/ant-salesforce-${ant_salesforce_version}.jar")
    implementation "org.jetbrains.kotlin:kotlin-stdlib:$kotlin_version"
    implementation 'org.jetbrains.kotlinx:kotlinx-html:0.7.3'
    implementation "org.apache.ant:ant:$ant_version"
    testImplementation "org.jetbrains.kotlin:kotlin-reflect:$kotlin_version"
    testImplementation 'org.testng:testng:6.9.13.6'
    testImplementation 'org.hamcrest:hamcrest-all:1.3'
    testImplementation "org.xmlunit:xmlunit-core:$xmlunit_version"
    testImplementation "org.xmlunit:xmlunit-matchers:$xmlunit_version"
    testImplementation 'com.nhaarman:mockito-kotlin:0.12.2'
    testImplementation 'org.jsoup:jsoup:1.10.1'
}

test {
    useTestNG()
}

jacoco {
    toolVersion = '0.8.5'
}

jacocoTestReport {
    reports {
        xml.enabled true
        html.destination file("${buildDir}/jacocoHtml")
    }
}

jar {
    manifest {
        attributes 'Implementation-Title': rootProject.name
        attributes 'Implementation-Version': archiveVersion
        attributes 'Ant-Version': "Apache Ant $ant_version"
        attributes 'Created-By': System.getProperty('java.version') + ' (' + System.getProperty('java.vendor') + ')'
    }
    from('src/main/kotlin') {
        include '**/antlib.xml'
    }
}

task downloadAntSalesforce(type: Download) {
    def archiveName = "salesforce_ant_${ant_salesforce_version}.zip"
    def downloadedFile = file("$buildDir/downloads/$archiveName")

    onlyIf {!downloadedFile.exists()}

    src "https://gs0.salesforce.com/dwnld/SfdcAnt/$archiveName"
    dest downloadedFile
    overwrite false
}

task unzipAntSalesforce(dependsOn: downloadAntSalesforce, type: Copy) {
    from zipTree(downloadAntSalesforce.dest)
    into layout.buildDirectory.dir("downloads/unzipped-${ant_salesforce_version}")
}

task copyAntSalesforce(dependsOn: unzipAntSalesforce, type: Copy) {
    from layout.buildDirectory.file("downloads/unzipped-${ant_salesforce_version}/ant-salesforce.jar")
    into layout.projectDirectory.file('libs')
    rename { String name -> "ant-salesforce-${ant_salesforce_version}.jar" }
}

compileKotlin.dependsOn.add(copyAntSalesforce)

task fatJar(type: Jar) {
    manifest.from jar.manifest
    archiveClassifier.set 'all'
    from {
        configurations.compileClasspath.collect { it.isDirectory() ? it : zipTree(it) }
    } {
        exclude 'META-INF/*.txt'
        exclude 'META-INF/*.SF'
        exclude 'META-INF/*.DSA'
        exclude 'META-INF/*.RSA'
        exclude 'org/apache/tools/ant/'
        exclude 'images/ant_logo_large.gif'
        exclude 'kotlinx.html.shared/'
        exclude 'kotlinx.html.shared.*.js'
    }
    with jar
}

task sourceJar(type: Jar) {
    from sourceSets.main.allSource
    archiveClassifier.set 'sources'
}

artifacts {
    archives jar
    archives fatJar
    archives sourceJar
}

if (project.hasProperty('mavenRepositoryUsername') && project.hasProperty('mavenRepositoryPassword')) {
    publishing {
        repositories {
            maven {
                url = 'https://aquiva.jfrog.io/artifactory/maven-salesforce'
                credentials {
                    username = project.property('mavenRepositoryUsername')
                    password = project.property('mavenRepositoryPassword')
                }
            }
        }
        publications {
            mavenJava(MavenPublication) {
                from components.java
                artifact sourceJar

                pom {
                    name = 'antforce'
                    description = 'A set of Apache Ant tasks that help to implement Continuous Integration for Force.com projects. It\'s built on top of Force.com Migration Tool and extends it in many ways.'
                    url = 'https://github.com/valmaev/antforce'
                    licenses {
                        license {
                            name = 'The Apache License, Version 2.0'
                            url = 'http://www.apache.org/licenses/LICENSE-2.0.txt'
                        }
                    }
                    developers {
                        developer {
                            id = 'valmaev'
                            name = 'Vladimir Almaev'
                        }
                    }
                    scm {
                        url = 'https://github.com/valmaev/antforce'
                    }
                }
            }
        }
    }
}
